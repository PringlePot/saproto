name: 🛠 Format
on: pull_request
jobs:
  phplint:
    runs-on: ubuntu-latest
    name: 🛠 Fix PHP formatting
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none

      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: 🔍 Read .env
        run: grep -E 'PHP_VERSION' .env.prod >> $GITHUB_ENV

      - uses: ramsey/composer-install@v3
        with:
          composer-options: "--ignore-platform-reqs --optimize-autoloader --prefer-dist"

      - uses: actions/cache@v3
        with:
          path: .tmp/rector
          key: ${{ runner.os }}-rector-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-rector-

      - run: mkdir -p .tmp/rector

      - name: Run rector
        run: vendor/bin/rector --ansi

      - name: Cache Pint
        uses: actions/cache@v3
        with:
          path: .tmp/pint.cache
          key: ${{ runner.os }}-pint-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-pint-

      - run: mkdir -p .tmp/pint

      - name: Run pint
        run: ./vendor/bin/pint

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: PHP Linting (Pint)
          skip_fetch: true
  deploy:
    name: Deploy Check
    runs-on: ubuntu-latest
    needs: phplint
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: testing
        ports:
          - 33306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    env:
      BUILD_SOURCE_DIR: .
      BUILD_ARTIFACT_STAGING_DIR: build/
      BUILD_ARTIFACT_DESTINATION_DIR: /domains/proto.utwente.nl/deployment/uploads/
      HOST_SERVER: s176.webhostingserver.nl
      SENTRY_ORG: sa-proto
      SENTRY_PROJECT: sa-proto-website
    steps:
      - name: 🛎️ Checkout project
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: 🖱️ Setup PHP v${{ env.PHP_VERSION }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none

      - name: 🔍 Read .env
        run: (grep -E 'PHP_VERSION' .env.prod >> $GITHUB_ENV && cp .env.ci .env)

      - uses: ramsey/composer-install@v3
        with:
          composer-options: "--ignore-platform-reqs --optimize-autoloader --prefer-dist"

      - name: 🖱️ Set Node v${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: 📥 Install front-end dependencies
        run: npm ci --ignore-scripts
      - name: 🔨 build front-end
        run: npm run build

      - name: 🐘 Run Pest tests
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: testing
          DB_PORT: 33306
          DB_USER: root
          DB_PASSWORD: secret
        run: |
          php artisan key:generate
          php artisan migrate
          vendor/bin/pest --ci

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: laravel-failure-artifact
          path: storage/logs/laravel.log
